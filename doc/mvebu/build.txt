Build instructions:
-------------------

This document describe how to compile the U-Boot and how to change U-Boot and
SPL (secondary program loader) configuration

Build Instruction:
------------------

1. Download the U-Boot release <DVUBR> from ftp://ftp.denx.de/pub/u-boot/u-boot-2015.01.tar.bz2
2. Extract U-Boot vanilla tree with Marvell source:
	2.1. Extract U-Boot source code:
		# tar -xjf u-boot-<DVUBR>.tar.bz2
		# mv u-boot-<DVUBR> u-boot-<DVUBR>-<MVUBR>
	2.2. add Marvell code:
	- Option 1: Extracting the release zip file over the vanilla tree:
		 Extract the u-boot-<DVUBR>-<MVUBR>.zip release file.
		# unzip u-boot-<DVUBR>-<MVUBR>.zip
		For example: unzip u-boot-2015.01-2015_T3.0.eng_drop_v6.zip.
		This overrides part of the U-Boot source files and adds the relevant Marvell files.
		 When asked whether to replace a certain file, choose 'A' for all files that have such a conflict.
	- Option 2: Patch update:
		 Extract the git-<DVUBR>-<MVUBR>.zip to the destination folder u-boot-<DVUBR>-<MVUBR>.
		 Run the following git command in the u-boot-<DVUBR>-<MVUBR> folder:
		  git apply git-<version>-<release>/*.patch
3. Change directory 'cd' to the U-Boot directory.
4. Set the cross compiler:
	# export CROSS_COMPILE=/path/to/toolchain/aarch64-marvell-linux-gnu-
5. Clean-up old residuals:
	# make mrproper
6. Configure the U-Boot:
	# make <defconfig_file>
	For AP806 stand alone board use "make mvebu_apn806_defconfig"
	For Armada 8040Rz board use "make mvebu_armada70x0_defconfig"
	For Armada-3700 board use "make mvebu_armada3700_defconfig"
7. Build the U-Boot (Armada-3700 builds require WTP tools installation -
   refer to the section "Tools installation for Armada-3700 builds"):
	# make
	The -Boot compilation generates 2 files:
	u-boot.bin - U-Boot image
	spl/u-boot-spl.bin - SPL image.

Please Note:
------------
	The u-boot.bin and spl/u-boot-spl.bin should not be used as a stand alone images.
	The ARM Trusted Firmware (ATF) build process use this images to generates the
	flash image.

Configuration update:
---------------------
	To update the U-Boot configuration and the SPL configuration, please refer to
	doc/README.kconfig

Boot device selection note:
---------------------------
	The Armada-3700 supports eMMC as the boot device on target.
	The default boot device on this platform is SPI NOR flash.
	In order to change the boot device to eMMC, set the following parameter
	the default configuration:
	CONFIG_MVEBU_MMC_BOOT=y
	If "menuconfig" is used, navigate to the following location:
	-> ARM architecture
	  -> Flash for image
	and select "eMMC flash boot".
	The eMMC has 2 boot partitions (BOOT0 and BOOT1) and a user data partition (DATA).
	The boot partitions are numbered as partition 1 and 2 in MMC driver.
	Number 0 is used for user data partition and should not be utilized for storing
	boot images and u-boot environment in RAW mode since it will break file system
	structures usually located here.
	The default boot partition is BOOT0. It is selected by the following parameter:
	CONFIG_SYS_MMC_ENV_PART=1
	Valid values for this parameter are 1 for BOOT0 and 2 for BOOT1.
	Please never use partition number 0 here!
	It can be changed in "menuconfig" location:
	-> ARM architecture
	  -> eMMC Boot Partition
	Please note that this configuration is only available when "Flash for image"
	selects "eMMC flash boot" device as described above.
	The selected partition will be used by u-boot "bubt" and "savenv" commands
	for flashing the boot image and saving u-boot configuration.
	The boot partition can be written from Linux command line using the following
	commands:
	# sudo echo 0 > /sys/block/mmcblk0boot0/force_ro
	# sudo dd if=u-boot-spl.img of=/dev/mmcblk0boot0
	The first commands removes the write protection flag from the boot partition 0.
	The same operation can be done for BOOT1 partition by replacing the partition
	id in the above commands from mmcblk0boot0 to mmcblk0boot1.


Tools installation for Armada-3700 builds:
------------------------------------------
1. Extract the tools/wtp/WTPTP_TOOLS_x_x_xx.zip in a temporary directory

   # cd tools/wtp
   # 7z x WTPTP_TOOLS_x_x_xx.zip

2. If required, add executable permissions to files in the extracted
   WTPTP_TOOLS_x_x_xx/Linux_Tools folder:

   # sudo chmod a+x WTPTP_TOOLS_x_x_xx/Linux_Tools/*.exe

3. Copy executable files from WTPTP_TOOLS_x_x_xx/Linux_Tools
   to location pointed by $PATH environment variable.
   For instance:

   # sudo cp WTPTP_TOOLS_x_x_xx/Linux_Tools/*.exe /usr/local/bin

4. Make sure the "ntbb_linux.exe" can be executed from any
   location and the u-boot "make" passes without error.
